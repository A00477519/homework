{"ast":null,"code":"var _jsxFileName = \"/Users/papantiamoah/Documents/homeworkr/src/weatherComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport img from './cold.png';\nimport img2 from './mild.png';\n// import img from './sunny.png'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherComponent = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  useEffect(() => {\n    const apiKey = 'a256f84b5a84a1431164d0ed7eab26ab';\n    const city = 'Halifax'; // Replace with your ci\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    fetch(apiUrl).then(response => response.json()).then(data => setWeatherData(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  if (!weatherData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  const temperature = weatherData.main.temp;\n  let weatherIcon;\n  if (temperature <= 10) {\n    /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: \"cold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this);\n  } else if (temperature > 10 && temperature < 20) {\n    /*#__PURE__*/_jsxDEV(\"img2\", {\n      src: img,\n      alt: \"mild\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this);\n  } else {\n    weatherIcon = '../sunny.png';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Weather in \", weatherData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: weatherIcon,\n      alt: \"Weather Icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [temperature, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherComponent, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = WeatherComponent;\nexport default WeatherComponent;\nvar _c;\n$RefreshReg$(_c, \"WeatherComponent\");","map":{"version":3,"names":["React","useState","useEffect","img","img2","jsxDEV","_jsxDEV","WeatherComponent","_s","weatherData","setWeatherData","apiKey","city","apiUrl","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","temperature","main","temp","weatherIcon","src","alt","name","_c","$RefreshReg$"],"sources":["/Users/papantiamoah/Documents/homeworkr/src/weatherComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport img from './cold.png'\nimport img2 from './mild.png'\n// import img from './sunny.png'\n\nconst WeatherComponent = () => {\n  const [weatherData, setWeatherData] = useState(null);\n\n  useEffect(() => {\n  \n    const apiKey = 'a256f84b5a84a1431164d0ed7eab26ab';\n    const city = 'Halifax'; // Replace with your ci\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then((data) => setWeatherData(data))\n      .catch((error) => console.error('Error fetching data:', error));\n  }, []);\n\n  if (!weatherData) {\n    return <div>Loading...</div>;\n  }\n\n  const temperature = weatherData.main.temp;\n  let weatherIcon;\n\n  if (temperature <= 10) {\n    <img src={img} alt=\"cold\" />\n  } else if (temperature > 10 && temperature < 20) {\n    <img2 src={img} alt=\"mild\" />\n  } else {\n    weatherIcon = '../sunny.png';\n  }\n\n  return (\n    <div>\n      <h2>Current Weather in {weatherData.name}</h2>\n      <img src={weatherIcon} alt=\"Weather Icon\" />\n      <p>{temperature}Â°C</p>\n    </div>\n  );\n};\n\nexport default WeatherComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,YAAY;AAC5B,OAAOC,IAAI,MAAM,YAAY;AAC7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IAEd,MAAMS,MAAM,GAAG,kCAAkC;IACjD,MAAMC,IAAI,GAAG,SAAS,CAAC,CAAC;IACxB,MAAMC,MAAM,GAAI,qDAAoDD,IAAK,UAASD,MAAO,eAAc;IAEvGG,KAAK,CAACD,MAAM,CAAC,CACVE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKR,cAAc,CAACQ,IAAI,CAAC,CAAC,CACpCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACX,WAAW,EAAE;IAChB,oBAAOH,OAAA;MAAAgB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,MAAMC,WAAW,GAAGlB,WAAW,CAACmB,IAAI,CAACC,IAAI;EACzC,IAAIC,WAAW;EAEf,IAAIH,WAAW,IAAI,EAAE,EAAE;IACrB,aAAArB,OAAA;MAAKyB,GAAG,EAAE5B,GAAI;MAAC6B,GAAG,EAAC;IAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9B,CAAC,MAAM,IAAIC,WAAW,GAAG,EAAE,IAAIA,WAAW,GAAG,EAAE,EAAE;IAC/C,aAAArB,OAAA;MAAMyB,GAAG,EAAE5B,GAAI;MAAC6B,GAAG,EAAC;IAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/B,CAAC,MAAM;IACLI,WAAW,GAAG,cAAc;EAC9B;EAEA,oBACExB,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,GAAI,qBAAmB,EAACb,WAAW,CAACwB,IAAI;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9CpB,OAAA;MAAKyB,GAAG,EAAED,WAAY;MAACE,GAAG,EAAC;IAAc;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CpB,OAAA;MAAAgB,QAAA,GAAIK,WAAW,EAAC,OAAE;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAAClB,EAAA,CArCID,gBAAgB;AAAA2B,EAAA,GAAhB3B,gBAAgB;AAuCtB,eAAeA,gBAAgB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}